<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        THcmE5KFswyGJhLVf//Z
</value>
  </data>
</root>